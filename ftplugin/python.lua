vim.opt.tabstop = 4
vim.opt.shiftwidth = 4
vim.b.inlay_hint_disable = true

-- -- TODO: Select venv etc
-- local Python = require("helpers.python")
--
-- vim.api.nvim_create_user_command("Python", function()
--   Python.python(function(python)
--     if python then
--       vim.notify(python.name .. " (" .. python.version .. ")")
--     else
--       vim.notify("No python environment")
--     end
--   end)
-- end, {})
--
-- vim.api.nvim_create_user_command("PythonSelect", function()
--   Python.select_conda({
--     callback = function(env)
--       if env then
--         if Python.activate(env) then
--           vim.notify("Activated: " .. env.name)
--           vim.cmd("LspRestart")
--         else
--           vim.notify("Failed to activate environment: " .. env.name)
--         end
--       else
--         vim.notify("No environment selected")
--       end
--     end,
--   })
-- end, {})

-- require("which-key").add({
--   { "<leader>a", group = "Python", icon = { cat = "filetype", name = "python" } },
--
--   {
--     "<leader>aA",
--     function()
--       Python.select_conda({
--         callback = function(env)
--           if Python.activate(env) then
--             vim.cmd("LspRestart<CR>")
--           end
--         end,
--       })
--     end,
--     desc = "Select environtment",
--   },
--   {
--     "<leader>aa",
--     function()
--       Python.activate()
--     end,
--     desc = "Activate Python environment",
--     silent = false,
--   },
--   {
--     "<leader>as",
--     function()
--       Python.select_conda({
--         callback = function(env)
--           if env then
--             Python.write_pyrightconfig(env)
--           end
--         end,
--         force = true,
--       })
--     end,
--     desc = "Save virtual environment",
--   },
-- })
